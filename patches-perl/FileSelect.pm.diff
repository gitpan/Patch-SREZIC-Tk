--- Tk800.024/Tk/FileSelect.pm	Tue Mar  5 21:47:44 2002
+++ new.Tk800.024/Tk/FileSelect.pm	Sun Apr  7 20:07:06 2002
@@ -337,13 +337,30 @@
     {
      if (substr($dir,1,1) eq '/')
       {
-       $dir = $ENV{'HOME'} . substr($dir,1);
+       $dir = (defined $ENV{'HOME'} ? $ENV{'HOME'} : '') . substr($dir,1);
       }
      else
       {my ($uid,$rest) = ($dir =~ m#^~([^/]+)(/.*$)#);
        $dir = (getpwnam($uid))[7] . $rest;
       }
     }
+   my $revert_dir = sub
+    {
+     my $message = shift;
+     $$var = $cw->{OldDirectory};
+     $cw->messageBox(-message => $message, -icon => 'error');
+     if (!defined $$var)
+      {
+       # OldDirectory was never set, so force reread...
+       $$var = $cw->{OldDirectory} = Cwd::getcwd(); # XXX maybe use check like code below...
+       unless ($cw->{'reread'}++)
+        {
+         $cw->Busy;
+         $cw->afterIdle(['reread',$cw])
+        }
+      }
+     $$var;
+    };
    $dir =~ s#([^/\\])[\\/]+$#$1#;
    if (-d $dir)
     {
@@ -359,17 +376,20 @@
           }
          else
           {
-           carp "Cannot getcwd in '$dir'";
+	   return $revert_dir->("Cannot getcwd in '$dir'");
+          }
+         if (!chdir($pwd))
+          {
+	   return $revert_dir->("Cannot change directory to $pwd:\n$!");
           }
-         chdir($pwd) || carp "Cannot chdir($pwd) : $!";
-         $cw->{Configure}{'-directory'} = $dir;
+	 $$var = $dir;
         }
        else
         {
-         $cw->BackTrace("Cannot chdir($dir) :$!");
+	 return $revert_dir->("Cannot change directory to $dir:\n$!");
         }
+       $$var = $cw->{OldDirectory} = $dir;
       }
-     $$var = $dir;
      unless ($cw->{'reread'}++)
       {
        $cw->Busy;
@@ -431,10 +451,10 @@
        $w->configure(-initialfile => undef) unless $w->cget('-create');
       }
     }
-   $w->{DirectoryString} = $dir . '/' . $w->cget('-filter');
+   $w->{DirectoryString} = $dir . ($dir ne '/' ? '/' : '') . $w->cget('-filter');
   }
  $w->{'reread'} = 0;
- $w->Unbusy;
+ $w->Unbusy if $w->{'Busy'};
 }
 
 sub validateDir
