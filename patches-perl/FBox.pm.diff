--- Tk800.024/Tk/FBox.pm	Tue Mar  5 21:48:36 2002
+++ new.Tk800.024/Tk/FBox.pm	Wed Aug 21 23:02:38 2002
@@ -45,10 +45,6 @@
 
 Construct Tk::Widget 'FBox';
 
-my $selectFilePath;
-my $selectFile;
-my $selectPath;
-
 sub import {
     if (defined $_[1] and $_[1] eq 'as_default') {
 	local $^W = 0;
@@ -58,6 +54,12 @@
     }
 }
 
+# Note that -sortcmd is experimental and the interface is likely to change.
+# Using -sortcmd is really strange :-(
+# $top->getOpenFile(-sortcmd => sub { package Tk::FBox; uc $b cmp uc $a});
+# or, un-perlish, but useable (now activated in code):
+# $top->getOpenFile(-sortcmd => sub { uc $_[1] cmp uc $_[0]});
+
 sub Populate {
     my($w, $args) = @_;
 
@@ -75,10 +77,10 @@
 		      -textvariable => \$w->{'selectPath'},
 		      -command => ['SetPath', $w]);
     my $upBtn = $f1->Button;
-    if (!defined $updirImage) {
-	$updirImage = $w->Bitmap(-data => "#define updir_width 28\n" .
-	                                  "#define updir_height 16\n" .
-				          <<EOF);
+    if (!defined $updirImage->{$w->MainWindow}) {
+        $updirImage->{$w->MainWindow} = $w->Bitmap(-data => <<EOF);
+#define updir_width 28
+#define updir_height 16
 static char updir_bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00,
    0x20, 0x40, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x01, 0x10, 0x00, 0x00, 0x01,
@@ -88,7 +90,7 @@
    0xf0, 0xff, 0xff, 0x01};
 EOF
     }
-    $upBtn->configure(-image => $updirImage);
+    $upBtn->configure(-image => $updirImage->{$w->MainWindow});
     $dirMenu->configure(-takefocus => 1, -highlightthickness => 2);
     $upBtn->pack(-side => 'right', -padx => 4, -fill => 'both');
     $lab->pack(-side => 'left', -padx => 4, -fill => 'both');
@@ -198,21 +200,23 @@
     $w->SetPath(_cwd());
 
     $w->ConfigSpecs(-defaultextension => ['PASSIVE', undef, undef, undef],
-		    -filetypes        => ['PASSIVE', undef, undef, undef],
-		    -initialdir       => ['PASSIVE', undef, undef, undef],
-		    -initialfile      => ['PASSIVE', undef, undef, undef],
-		    -title            => ['PASSIVE', undef, undef, undef],
-		    -type             => ['PASSIVE', undef, undef, 'open'],
-		    -filter           => ['PASSIVE', undef, undef, '*'],
-		    -force            => ['PASSIVE', undef, undef, 0],
-		    'DEFAULT'         => [$icons],
-		   );
+                    -filetypes        => ['PASSIVE', undef, undef, undef],
+                    -initialdir       => ['PASSIVE', undef, undef, undef],
+                    -initialfile      => ['PASSIVE', undef, undef, undef],
+#		    -sortcmd          => ['PASSIVE', undef, undef, sub { lc($a) cmp lc($b) }],
+		    -sortcmd          => ['PASSIVE', undef, undef, sub { lc($_[0]) cmp lc($_[1]) }],
+                    -title            => ['PASSIVE', undef, undef, undef],
+                    -type             => ['PASSIVE', undef, undef, 'open'],
+                    -filter           => ['PASSIVE', undef, undef, '*'],
+                    -force            => ['PASSIVE', undef, undef, 0],
+                    'DEFAULT'         => [$icons],
+                   );
     # So-far-failed attempt to break reference loops ...
     $w->_OnDestroy(qw(dirMenu icons typeMenuLab typeMenuBtn okBtn ent updateId));
     $w;
 }
 
-
+# -initialdir fix with ResolveFile
 sub Show {
     my $w = shift;
 
@@ -225,8 +229,9 @@
     {
 	my $initialdir = $w->cget(-initialdir);
 	if (defined $initialdir) {
-	    if (-d $initialdir) {
-		$w->{'selectPath'} = $initialdir;
+	    my ($flag, $path, $file) = ResolveFile($initialdir, 'junk');
+	    if ($flag eq 'OK' or $flag eq 'FILE') {
+		$w->{'selectPath'} = $path;
 	    } else {
 		$w->Error("\"$initialdir\" is not a valid directory");
 	    }
@@ -253,7 +258,7 @@
 	$typeMenuBtn->configure(-state => 'normal');
 	$typeMenuLab->configure(-state => 'normal');
     } else {
-	$w->configure(-filter => '*');
+#XXX	$w->configure(-filter => '*');
 	$typeMenuBtn->configure(-state => 'disabled',
 				-takefocus => 0);
 	$typeMenuLab->configure(-state => 'disabled');
@@ -286,17 +291,19 @@
     my $ent = $w->{'ent'};
     $ent->focus;
     $ent->delete(0, 'end');
-    $ent->insert(0, $w->{'selectFile'});
-    $ent->selectionFrom(0);
-    $ent->selectionTo('end');
-    $ent->icursor('end');
+    if (defined $w->{'selectFile'} && $w->{'selectFile'} ne '') {
+	$ent->insert(0, $w->{'selectFile'});
+	$ent->selectionFrom(0);
+	$ent->selectionTo('end');
+	$ent->icursor('end');
+    }
 
     # 8. Wait for the user to respond, then restore the focus and
     # return the index of the selected button.  Restore the focus
     # before deleting the window, since otherwise the window manager
     # may take the focus away so we can't redirect it.  Finally,
     # restore any grab that was in effect.
-    $w->waitVariable(\$selectFilePath);
+    $w->waitVariable(\$w->{'selectFilePath'});
     eval {
 	$oldFocus->focus if $oldFocus;
     };
@@ -304,14 +311,14 @@
 	$w->grabRelease;
 	$w->withdraw;
     }
-    if ($oldGrab) {
+    if (Tk::Exists($oldGrab) && $oldGrab->viewable) {
 	if ($grabStatus eq 'global') {
 	    $oldGrab->grabGlobal;
 	} else {
 	    $oldGrab->grab;
 	}
     }
-    return $selectFilePath;
+    return $w->{'selectFilePath'};
 }
 
 # tkFDialog_UpdateWhenIdle --
@@ -347,13 +354,13 @@
     } else {
 	delete $w->{'updateId'};
     }
-    unless (defined $folderImage) {
+    unless (defined $folderImage->{$w->MainWindow}) {
 	require Tk::Pixmap;
-	$folderImage = $w->Pixmap(-file => Tk->findINC('folder.xpm'));
-	$fileImage   = $w->Pixmap(-file => Tk->findINC('file.xpm'));
+	$folderImage->{$w->MainWindow} = $w->Pixmap(-file => Tk->findINC('folder.xpm'));
+	$fileImage->{$w->MainWindow}   = $w->Pixmap(-file => Tk->findINC('file.xpm'));
     }
-    my $folder = $folderImage;
-    my $file   = $fileImage;
+    my $folder = $folderImage->{$w->MainWindow};
+    my $file   = $fileImage->{$w->MainWindow};
     my $appPWD = _cwd();
     if (!ext_chdir($w->{'selectPath'})) {
 	# We cannot change directory to $data(selectPath). $data(selectPath)
@@ -381,19 +388,36 @@
     $icons->DeleteAll;
 
     # Make the dir & file list
-    my $flt = join('|', split(' ', $w->cget(-filter)) );
-    $flt =~ s!([\.\+])!\\$1!g;
-    $flt =~ s!\*!.*!g;
+    my $cwd = _cwd();
     local *FDIR;
-    if( opendir( FDIR,  _cwd() )) {
-      my @files;
-        foreach my $f (sort { lc($a) cmp lc($b) } readdir FDIR) {
-          next if $f eq '.' or $f eq '..';
-          if (-d $f) { $icons->Add($folder, $f); }
-          elsif( $f =~ m!$flt$! ) { push( @files, $f ); }
+    if (opendir(FDIR, $cwd)) {
+        my @files;
+#	my $sortcmd = $w->cget(-sortcmd);
+	my $sortcmd = sub { $w->cget(-sortcmd)->($a,$b) };
+	my $flt = $w->cget(-filter);
+	my $fltcb;
+	if (ref $flt eq 'CODE') {
+	    $fltcb = $flt;
+	} else {
+	    $flt = _rx_to_glob($flt);
+	}
+        foreach my $f (sort $sortcmd readdir(FDIR)) {
+            next if $f eq '.' or $f eq '..';
+	    if ($fltcb) {
+		next if !$fltcb->($w, $f, $cwd);
+	    } else {
+		next if -f $f && $f !~ m!$flt!;
+	    }
+            if (-d $f) {
+		$icons->Add($folder, $f);
+	    } else {
+		push @files, $f;
+	    }
+	}
+	closedir(FDIR);
+	foreach my $f (@files) {
+	    $icons->Add($file, $f);
 	}
-      closedir( FDIR );
-      foreach my $f ( @files ) { $icons->Add($file, $f); }
     }
 
     $icons->Arrange;
@@ -709,7 +733,8 @@
 # Gets called when user presses the "Cancel" button
 #
 sub CancelCmd {
-    undef $selectFilePath;
+    my $w = shift;
+    undef $w->{'selectFilePath'};
 }
 
 # Gets called when user browses the IconList widget (dragging mouse, arrow
@@ -752,8 +777,15 @@
 	    $w->SetPath($file);
 	}
     } else {
-	$w->{'selectFile'} = $file;
-	$w->Done;
+        my($flag, $path, $file) = ResolveFile($w->{'selectPath'}, $text);
+        if ($flag ne 'OK') {
+            $w->messageBox(-type => 'OK',
+                           -message => "Cannot resolve $w->{'selectPath'}/$text.",
+                           -icon => 'error');
+        } else {
+            $path = JoinFile($path, $file);
+            $w->Done($path);
+        }
     }
 }
 
@@ -780,7 +812,7 @@
 	    return unless (lc($reply) eq 'yes');
 	}
     }
-    $selectFilePath = ($_selectFilePath ne '' ? $_selectFilePath : undef);
+    $w->{'selectFilePath'} = ($_selectFilePath ne '' ? $_selectFilePath : undef);
 }
 
 sub FDialog {
@@ -885,6 +917,18 @@
     my $s = shift;
     $s =~ /^(.*)$/;
     $1;
+}
+
+sub _rx_to_glob {
+    my $arg = shift;
+    $arg = join('|', split(' ', $arg));
+    $arg =~ s!([\.\+])!\\$1!g;
+    $arg =~ s!\*!.*!g;
+    $arg = "^" . $arg . "\$";
+    if ($] >= 5.005) {
+	$arg = qr/$arg/;
+    }
+    $arg;
 }
 
 1;
